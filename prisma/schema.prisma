generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// --- BRANDS ---
model brands {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String    @db.VarChar(100)
  logo_url   String?   @db.Text
  created_at DateTime? @default(now()) @db.Timestamptz

  products   products[]
}

/// --- CATEGORIES ---
model categories {
  id         String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String       @db.VarChar(100)
  slug       String?      @unique @db.VarChar(100)
  parent_id  String?      @db.Uuid
  created_at DateTime?    @default(now()) @db.Timestamptz

  parent     categories?  @relation("CategoryHierarchy", fields: [parent_id], references: [id])
  children   categories[] @relation("CategoryHierarchy")

  products   products[]
}

/// --- PRODUCTS ---
model products {
  id            String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name          String            @db.VarChar(255)
  brand_id      String?           @db.Uuid
  category_id   String?           @db.Uuid
  description   String?           @db.Text
  base_price    Decimal?          @db.Numeric(10,2)
  sku           String?           @unique @db.VarChar(50)
  is_active     Boolean?          @default(true)
  scraped_from  String?           @db.Text
  scraped_data  Json?
  created_at    DateTime?         @default(now()) @db.Timestamptz
  updated_at    DateTime?         @default(now()) @db.Timestamptz

  brand         brands?           @relation(fields: [brand_id], references: [id])
  category      categories?       @relation(fields: [category_id], references: [id])
  product_images    product_images[]
  product_variants  product_variants[]
  order_items       order_items[]
}

/// --- PRODUCT VARIANTS ---
model product_variants {
  id             String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  product_id     String?    @db.Uuid
  size           Decimal?   @db.Numeric(4,1)
  color          String?    @db.VarChar(50)
  stock_quantity Int?       @default(0)
  price          Decimal?   @db.Numeric(10,2)
  sku            String?    @unique @db.VarChar(50)
  created_at     DateTime?  @default(now()) @db.Timestamptz

  product        products?  @relation(fields: [product_id], references: [id])
  order_items    order_items[]
  shopping_carts shopping_carts[]
}

/// --- PRODUCT IMAGES ---
model product_images {
  id            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  product_id    String?   @db.Uuid
  image_url     String    @db.VarChar(500)
  alt_text      String?   @db.VarChar(255)
  is_primary    Boolean?  @default(false)
  display_order Int?      @default(0)

  product       products? @relation(fields: [product_id], references: [id])
}

/// --- USERS ---
model users {
  id             String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email          String          @unique @db.VarChar(255)
  password_hash  String          @db.VarChar(255)
  first_name     String?         @db.VarChar(100)
  last_name      String?         @db.VarChar(100)
  role           String?         @default("customer") @db.VarChar(50)
  is_active      Boolean?        @default(true)
  email_verified Boolean?        @default(false)
  created_at     DateTime?       @default(now()) @db.Timestamptz

  sessions   user_sessions[]
  orders     orders[]
  carts      shopping_carts[]
}

/// --- USER SESSIONS ---
model user_sessions {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?  @db.Uuid
  token_hash String?  @db.VarChar(255)
  expires_at DateTime?
  created_at DateTime? @default(now()) @db.Timestamptz

  user users? @relation(fields: [user_id], references: [id])
}

/// --- PERMISSIONS ---
model permissions {
  id          Int               @id @default(autoincrement())
  name        String            @unique @db.VarChar(100)
  description String?

  role_permissions role_permissions[]
}

/// --- ROLE PERMISSIONS ---
model role_permissions {
  role          String        @db.VarChar(50)
  permission_id Int

  permission permissions @relation(fields: [permission_id], references: [id])

  @@id([role, permission_id])
}

/// --- ORDERS ---
model orders {
  id              String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id         String?       @db.Uuid
  order_number    String?       @unique @db.VarChar(50)
  status          String?       @default("pending") @db.VarChar(30)
  total_amount    Decimal?      @db.Numeric(10,2)
  shipping_address String?      @db.Text
  billing_address  String?      @db.Text
  payment_method   String?      @db.VarChar(50)
  payment_status   String?      @default("pending") @db.VarChar(30)
  created_at       DateTime?    @default(now()) @db.Timestamptz
  updated_at       DateTime?    @default(now()) @db.Timestamptz

  user        users?        @relation(fields: [user_id], references: [id])
  order_items order_items[]
}

/// --- ORDER ITEMS ---
model order_items {
  id                String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id          String?           @db.Uuid
  product_variant_id String?          @db.Uuid
  quantity          Int
  unit_price        Decimal?          @db.Numeric(10,2)
  total_price       Decimal?          @db.Numeric(10,2)
  created_at        DateTime?         @default(now()) @db.Timestamptz

  order       orders?           @relation(fields: [order_id], references: [id])
  variant     product_variants? @relation(fields: [product_variant_id], references: [id])
}

/// --- SHOPPING CARTS ---
model shopping_carts {
  id                String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id           String?           @db.Uuid
  product_variant_id String?          @db.Uuid
  quantity          Int
  created_at        DateTime?         @default(now()) @db.Timestamptz
  updated_at        DateTime?         @default(now()) @db.Timestamptz

  user    users?            @relation(fields: [user_id], references: [id])
  variant product_variants? @relation(fields: [product_variant_id], references: [id])

  @@unique([user_id, product_variant_id])
}
